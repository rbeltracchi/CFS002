/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mil.sda111mil.forms;

import com.mil.sda111mil.beans.Alumno;
import com.mil.sda111mil.beans.Preceptor;
import com.mil.sda111mil.services.Service;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CF02
 */
public class MenuPrincipal extends javax.swing.JFrame implements Runnable {

    Preceptor preceptorLogueado = null;

    /**
     * Creates new form MenuPrincipal
     *
     * @param p
     */
    public MenuPrincipal(Preceptor p) {

        this.preceptorLogueado = p;
        initComponents();
        this.setTitle("Sistema De Asistencias v0.1");
        this.setExtendedState(MenuPrincipal.MAXIMIZED_BOTH);
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("/imagenes/32x32/logo.png")).getImage());
        alertaAsistencias.setVisible(true);

        alertarAsistencias();

        generarSalidaMenuItem.setEnabled(false);
        imprimirMenuItem.setEnabled(false);
        contenidoMenuItem.setVisible(false);
        lblFecha.setText(fecha());
        hilo = new Thread((Runnable) this);
        hilo.start();
        this.setVisible(true);

        horaEnPantalla.setVisible(false);
        acercaDe.setVisible(false);
        jLabel2.setText(preceptorLogueado.getApellido() + ", " + preceptorLogueado.getNombre());

    }

    /**
     * El método da la fecha en un formato dado.
     */
    public static String fecha() {
        Date fecha = new Date();
        SimpleDateFormat formatoFecha = new SimpleDateFormat("EEE, dd 'de' MMMM 'de' yyyy");
        return formatoFecha.format(fecha);
    }

    /**
     * El método muestra la hora actual en un formato dado.
     */
    public void hora() {
        Calendar calendario = new GregorianCalendar();
        Date horaActual = new Date();
        calendario.setTime(horaActual);
        hora = calendario.get(Calendar.HOUR_OF_DAY) > 9 ? "" + calendario.get(Calendar.HOUR_OF_DAY) : "0" + calendario.get(Calendar.HOUR_OF_DAY);
        minutos = calendario.get(Calendar.MINUTE) > 9 ? "" + calendario.get(Calendar.MINUTE) : "0" + calendario.get(Calendar.MINUTE);
        segundos = calendario.get(Calendar.SECOND) > 9 ? "" + calendario.get(Calendar.SECOND) : "0" + calendario.get(Calendar.SECOND);
    }

    /**
     * El método dispara el hilo que sincroniza la hora del sistema con la que
     * va a mostrarse.
     */
    @Override
    public void run() {
        Thread actual = Thread.currentThread();
        while (actual == hilo) {
            hora();
            lblHora.setText(hora + ":" + minutos + ":" + segundos);
        }
    }

    Thread hilo;
    private String hora, minutos, segundos;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        horaEnPantalla = new javax.swing.JInternalFrame();
        panelHora = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblHora = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        alertaAsistencias = new javax.swing.JInternalFrame();
        alertarAsistencias = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTablerecurrentes = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableLibres = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableEnPeligro1 = new javax.swing.JTable();
        acercaDe = new javax.swing.JInternalFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel8 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        archivoMenu = new javax.swing.JMenu();
        cerrarSesionMenuItem = new javax.swing.JMenuItem();
        imprimirMenuItem = new javax.swing.JMenuItem();
        generarSalidaMenuItem = new javax.swing.JMenuItem();
        salirMenuItem = new javax.swing.JMenuItem();
        edicionMenu = new javax.swing.JMenu();
        preceptorMenuItem = new javax.swing.JMenuItem();
        alumnoMenuItem = new javax.swing.JMenuItem();
        responsableMenuItem = new javax.swing.JMenuItem();
        herramientasMenu = new javax.swing.JMenu();
        boxHoraPantalla = new javax.swing.JCheckBoxMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        asistenciasMenuItem = new javax.swing.JMenuItem();
        feriadosMenuItem = new javax.swing.JMenuItem();
        ayudaMenu = new javax.swing.JMenu();
        contenidoMenuItem = new javax.swing.JMenuItem();
        acercaMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(2);
        setResizable(false);

        desktopPane.setBackground(new java.awt.Color(153, 255, 255));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Bienvenido:");
        desktopPane.add(jLabel7);
        jLabel7.setBounds(10, 10, 150, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre");
        desktopPane.add(jLabel2);
        jLabel2.setBounds(160, 10, 370, 30);

        horaEnPantalla.setBackground(new java.awt.Color(255, 204, 204));
        horaEnPantalla.setClosable(true);
        horaEnPantalla.setVisible(true);

        panelHora.setBackground(new java.awt.Color(255, 204, 204));
        panelHora.setOpaque(false);
        panelHora.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setBackground(new java.awt.Color(255, 204, 204));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Fecha Actual:");
        panelHora.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 110, 30));

        jLabel6.setBackground(new java.awt.Color(255, 204, 204));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Hora Actual:");
        panelHora.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 100, 30));

        lblHora.setBackground(new java.awt.Color(255, 204, 204));
        lblHora.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblHora.setText("00:00:00");
        panelHora.add(lblHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 150, 30));

        lblFecha.setBackground(new java.awt.Color(255, 204, 204));
        lblFecha.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblFecha.setText("EEE, dd 'de' MMMM 'de' yyyy");
        panelHora.add(lblFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 210, 30));

        javax.swing.GroupLayout horaEnPantallaLayout = new javax.swing.GroupLayout(horaEnPantalla.getContentPane());
        horaEnPantalla.getContentPane().setLayout(horaEnPantallaLayout);
        horaEnPantallaLayout.setHorizontalGroup(
            horaEnPantallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelHora, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        horaEnPantallaLayout.setVerticalGroup(
            horaEnPantallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelHora, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        desktopPane.add(horaEnPantalla);
        horaEnPantalla.setBounds(100, 60, 328, 130);

        alertaAsistencias.setClosable(true);
        alertaAsistencias.setTitle("Alerta!");
        alertaAsistencias.setOpaque(true);
        alertaAsistencias.setVisible(true);
        alertaAsistencias.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        alertarAsistencias.setBackground(new java.awt.Color(204, 255, 255));
        alertarAsistencias.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        alertarAsistencias.setForeground(new java.awt.Color(250, 250, 250));
        alertarAsistencias.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTablerecurrentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTablerecurrentes);

        alertarAsistencias.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 580, 100));

        jTableLibres.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(jTableLibres);

        alertarAsistencias.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 580, 100));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Libres:");
        alertarAsistencias.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 60, 20));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Recurrentes:");
        alertarAsistencias.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 170, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("En Peligro:");
        alertarAsistencias.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 90, 30));

        jTableEnPeligro1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTableEnPeligro1);

        alertarAsistencias.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 580, 110));

        alertaAsistencias.getContentPane().add(alertarAsistencias, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 450));

        desktopPane.add(alertaAsistencias);
        alertaAsistencias.setBounds(100, 50, 610, 480);

        acercaDe.setBackground(new java.awt.Color(255, 255, 255));
        acercaDe.setClosable(true);
        acercaDe.setForeground(new java.awt.Color(255, 255, 255));
        acercaDe.setVisible(true);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPane1.setEditable(false);
        jTextPane1.setBorder(null);
        jTextPane1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jTextPane1.setText(" Creado por:\n\n Los Alumnos del Plan 111Mil\n            Sede CF002");
        jScrollPane2.setViewportView(jTextPane1);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.png"))); // NOI18N

        javax.swing.GroupLayout acercaDeLayout = new javax.swing.GroupLayout(acercaDe.getContentPane());
        acercaDe.getContentPane().setLayout(acercaDeLayout);
        acercaDeLayout.setHorizontalGroup(
            acercaDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(acercaDeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(acercaDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, acercaDeLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addContainerGap())))
        );
        acercaDeLayout.setVerticalGroup(
            acercaDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(acercaDeLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        desktopPane.add(acercaDe);
        acercaDe.setBounds(60, 60, 340, 420);

        archivoMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/32x32/Open-Folder_32x32.png"))); // NOI18N
        archivoMenu.setMnemonic('a');
        archivoMenu.setText("Archivo");

        cerrarSesionMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/32x32/if_User_32x32.png"))); // NOI18N
        cerrarSesionMenuItem.setMnemonic('c');
        cerrarSesionMenuItem.setText("Cerrar Sesión");
        cerrarSesionMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarSesionMenuItemActionPerformed(evt);
            }
        });
        archivoMenu.add(cerrarSesionMenuItem);

        imprimirMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/32x32/if_Print_32x32.png"))); // NOI18N
        imprimirMenuItem.setMnemonic('i');
        imprimirMenuItem.setText("Imprimir");
        archivoMenu.add(imprimirMenuItem);

        generarSalidaMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/32x32/SchoolBus_32x32.png"))); // NOI18N
        generarSalidaMenuItem.setMnemonic('g');
        generarSalidaMenuItem.setText("Generar Salida");
        generarSalidaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarSalidaMenuItemActionPerformed(evt);
            }
        });
        archivoMenu.add(generarSalidaMenuItem);

        salirMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/32x32/if_Log Out_32x32.png"))); // NOI18N
        salirMenuItem.setMnemonic('s');
        salirMenuItem.setText("Salir");
        salirMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirMenuItemActionPerformed(evt);
            }
        });
        archivoMenu.add(salirMenuItem);

        menuBar.add(archivoMenu);

        edicionMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/32x32/Edit_32x32.png"))); // NOI18N
        edicionMenu.setMnemonic('e');
        edicionMenu.setText("Edición");

        preceptorMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/32x32/if_User_32x32.png"))); // NOI18N
        preceptorMenuItem.setMnemonic('p');
        preceptorMenuItem.setText("Preceptor");
        preceptorMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preceptorMenuItemActionPerformed(evt);
            }
        });
        edicionMenu.add(preceptorMenuItem);

        alumnoMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/32x32/Student_32x32.png"))); // NOI18N
        alumnoMenuItem.setMnemonic('a');
        alumnoMenuItem.setText("Alumno");
        alumnoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alumnoMenuItemActionPerformed(evt);
            }
        });
        edicionMenu.add(alumnoMenuItem);

        responsableMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/32x32/Father_32x32.png"))); // NOI18N
        responsableMenuItem.setMnemonic('r');
        responsableMenuItem.setText("Responsable");
        responsableMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                responsableMenuItemActionPerformed(evt);
            }
        });
        edicionMenu.add(responsableMenuItem);

        menuBar.add(edicionMenu);

        herramientasMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/32x32/if_Settings_32x32.png"))); // NOI18N
        herramientasMenu.setMnemonic('h');
        herramientasMenu.setText("Herramientas");

        boxHoraPantalla.setMnemonic('f');
        boxHoraPantalla.setText("Fecha/Hora En Pantalla");
        boxHoraPantalla.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/32x32/if_calendar-clock_299096.png"))); // NOI18N
        boxHoraPantalla.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                boxHoraPantallaItemStateChanged(evt);
            }
        });
        herramientasMenu.add(boxHoraPantalla);
        herramientasMenu.add(jSeparator1);

        asistenciasMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/32x32/Calendar-icon_32x32.png"))); // NOI18N
        asistenciasMenuItem.setText("Asistencias");
        asistenciasMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asistenciasMenuItemActionPerformed(evt);
            }
        });
        herramientasMenu.add(asistenciasMenuItem);

        feriadosMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/32x32/calendario_hoy_32x32.png"))); // NOI18N
        feriadosMenuItem.setText("Días no hábiles");
        feriadosMenuItem.setToolTipText("");
        feriadosMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feriadosMenuItemActionPerformed(evt);
            }
        });
        herramientasMenu.add(feriadosMenuItem);

        menuBar.add(herramientasMenu);

        ayudaMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/32x32/if_Help_32x32.png"))); // NOI18N
        ayudaMenu.setMnemonic('h');
        ayudaMenu.setText("Ayuda");

        contenidoMenuItem.setMnemonic('c');
        contenidoMenuItem.setText("Contenido");
        ayudaMenu.add(contenidoMenuItem);

        acercaMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/32x32/Button-Info-icon_32x32.png"))); // NOI18N
        acercaMenuItem.setMnemonic('a');
        acercaMenuItem.setText("Acerca de...");
        acercaMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                acercaMenuItemMouseClicked(evt);
            }
        });
        acercaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acercaMenuItemActionPerformed(evt);
            }
        });
        ayudaMenu.add(acercaMenuItem);

        menuBar.add(ayudaMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * El método Cierra la Sesió Actual y abre el Formulario que contiene el
     * Menú Principal.
     */

    private void cerrarSesionMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarSesionMenuItemActionPerformed
        int opcion = JOptionPane.showConfirmDialog(null, "¿Realmente deseas Cerrar Sesión?", "Confirmar Salida", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (opcion == 0) {
            this.dispose();
            FormInicioSesion nuevo = new FormInicioSesion();
            nuevo.setVisible(true);
        }
    }//GEN-LAST:event_cerrarSesionMenuItemActionPerformed

    private void generarSalidaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarSalidaMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_generarSalidaMenuItemActionPerformed

    /**
     * El método que se dispara al hacer click en Salir. Muestra un dialogo de
     * confirmacion primero.
     */

    private void salirMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirMenuItemActionPerformed
        int opcion = JOptionPane.showConfirmDialog(null, "¿Realmente deseas Salir Del Programa?", "Confirmar Salida", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (opcion == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_salirMenuItemActionPerformed

    /**
     * El método al pulsar el CheckBox dispara el Formulario que contiene la
     * Hora Actual Del Sistema.
     */

    private void boxHoraPantallaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_boxHoraPantallaItemStateChanged

        if (horaEnPantalla.isShowing()) {
            horaEnPantalla.setVisible(false);
        } else {
            horaEnPantalla.setVisible(true);
        }
    }//GEN-LAST:event_boxHoraPantallaItemStateChanged

    /**
     * El método al pulsar sobre el MenuItem dispara el Formulario que muestra
     * quienes realizaron el Proyecto "Sistema de Asistencias".
     */

    private void acercaMenuItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_acercaMenuItemMouseClicked
        if (acercaDe.isVisible()) {
            this.dispose();
        } else {
            acercaDe.setVisible(true);
        }
    }//GEN-LAST:event_acercaMenuItemMouseClicked

    private void acercaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acercaMenuItemActionPerformed
        if (acercaDe.isVisible()) {
            acercaDe.setVisible(false);
        } else {
            acercaDe.setVisible(true);
        }
    }//GEN-LAST:event_acercaMenuItemActionPerformed

    private void feriadosMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feriadosMenuItemActionPerformed
        try {
            FormFeriado feriado = FormFeriado.getInstance();
            feriado.setVisible(false);
            if (feriado.isVisible()) {
                feriado.toFront();
                feriado.requestFocus();
            } else {
                desktopPane.add(feriado);
                feriado.toFront();
                feriado.setVisible(true);
            }
        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "se ha cerrado la ventana");
        }
    }//GEN-LAST:event_feriadosMenuItemActionPerformed

    private void asistenciasMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asistenciasMenuItemActionPerformed
        try {
            FormAsistencia asistencia = FormAsistencia.getInstance(preceptorLogueado);
            asistencia.setVisible(false);
            if (asistencia.isVisible()) {
                asistencia.toFront();
                asistencia.requestFocus();
            } else {
                desktopPane.add(asistencia);
                asistencia.toFront();
                asistencia.setVisible(true);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());

//            JOptionPane.showMessageDialog(null, "se ha cerrado la ventana");
        }
    }//GEN-LAST:event_asistenciasMenuItemActionPerformed

    /**
     * El método dispara el Formulario de creación/edición/eliminación de un
     * Responsable.
     */

    private void responsableMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_responsableMenuItemActionPerformed
        try {
            FormResponsable responsable = FormResponsable.getInstance();
            responsable.setVisible(false);
            if (responsable.isVisible()) {
                responsable.toFront();
                responsable.requestFocus();
            } else {
                desktopPane.add(responsable);
                responsable.toFront();
                responsable.setVisible(true);
            }
        } catch (Exception e) {
            System.out.println(e);

        }
    }//GEN-LAST:event_responsableMenuItemActionPerformed

    /**
     * El método dispara el Formulario de creación/edición/eliminación de un
     * Alumno.
     */

    private void alumnoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alumnoMenuItemActionPerformed
        try {
            FormAlumno alumno = FormAlumno.getInstance();
            alumno.setVisible(false);
            if (alumno.isVisible()) {
                alumno.toFront();
                alumno.requestFocus();
            } else {
                desktopPane.add(alumno);
                alumno.toFront();
                alumno.setVisible(true);
            }
        } catch (Exception e) {
            System.out.println(e.getStackTrace());

        }
    }//GEN-LAST:event_alumnoMenuItemActionPerformed

    /**
     * El método dispara el Formulario de creación/edición/eliminación de un
     * Preceptor.
     */

    private void preceptorMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preceptorMenuItemActionPerformed
        try {
            FormPreceptor preceptor = FormPreceptor.getInstance(preceptorLogueado);
            preceptor.setVisible(false);
            if (preceptor.isVisible()) {
                preceptor.toFront();
                preceptor.requestFocus();
            } else {
                desktopPane.add(preceptor);
                preceptor.toFront();
                preceptor.setVisible(true);
            }
        } catch (Exception e) {
            System.out.println(e);

            //            JOptionPane.showMessageDialog(null, "se ha cerrado la ventana");
        }
    }//GEN-LAST:event_preceptorMenuItemActionPerformed

    public void alertarAsistencias() {

        DefaultTableModel modelo;
        DefaultTableModel modeloUno;
        DefaultTableModel modeloDos;  
        
        String[] titulos = {"Apellido", "Nombre", "Curso", "Responsable", "Tel", "Inasistencias"};

        modelo = new NoEditableModel(null, titulos); 
        modeloUno = new NoEditableModel(null, titulos);
        modeloDos = new NoEditableModel(null, titulos);

        List<Alumno> alumnosCasiLibres = Service.getAlumnosLibres(preceptorLogueado, false);

        List<Alumno> alumnosLibres = Service.getAlumnosLibres(preceptorLogueado, true);

        List<Alumno> alumnoFaltas = Service.getAlumnosRecurrentes(3,this.preceptorLogueado);
        
        for (Alumno a : alumnosCasiLibres) {
            Object[] o = new Object[6];

            o[0] = a.getApellido();
            o[1] = a.getNombre();
            o[2] = a.getCurso();
            o[3] = a.getResponsable().getApellido() + ", " + a.getResponsable().getNombre();
            o[4] = a.getResponsable().getTelefonos().get(0).getNumero();
            o[5] = a.getAsistenciasTotales(Service.getFechaInicio(), new Date());

            modelo.addRow(o);
        }

        for (Alumno a : alumnosLibres) {
            Object[] o = new Object[6];

            o[0] = a.getApellido();
            o[1] = a.getNombre();
            o[2] = a.getCurso();
            o[3] = a.getResponsable().getApellido() + ", " + a.getResponsable().getNombre();
            o[4] = a.getResponsable().getTelefonos().get(0).getNumero();
            o[5] = a.getAsistenciasTotales(Service.getFechaInicio(), new Date());

            modeloUno.addRow(o);
        }
        
        for (Alumno a : alumnoFaltas) {
            Object[] o = new Object[6];

            o[0] = a.getApellido();
            o[1] = a.getNombre();
            o[2] = a.getCurso();
            o[3] = a.getResponsable().getApellido() + ", " + a.getResponsable().getNombre();
            o[4] = a.getResponsable().getTelefonos().get(0).getNumero();
            o[5] = a.getAsistenciasTotales(Service.getFechaInicio(), new Date());

            modeloDos.addRow(o);
        }

        jTableLibres.setModel(modeloUno);
        jTableEnPeligro1 .setModel(modelo);
        jTablerecurrentes.setModel(modeloDos);
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MenuPrincipal.class
//                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
//
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MenuPrincipal.class
//                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
//
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MenuPrincipal.class
//                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
//
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MenuPrincipal.class
//                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                MenuPrincipal menu = new MenuPrincipal();
//                menu.setVisible(true);
//
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame acercaDe;
    private javax.swing.JMenuItem acercaMenuItem;
    private javax.swing.JInternalFrame alertaAsistencias;
    private javax.swing.JPanel alertarAsistencias;
    private javax.swing.JMenuItem alumnoMenuItem;
    private javax.swing.JMenu archivoMenu;
    private javax.swing.JMenuItem asistenciasMenuItem;
    private javax.swing.JMenu ayudaMenu;
    private javax.swing.JCheckBoxMenuItem boxHoraPantalla;
    private javax.swing.JMenuItem cerrarSesionMenuItem;
    private javax.swing.JMenuItem contenidoMenuItem;
    public static javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenu edicionMenu;
    private javax.swing.JMenuItem feriadosMenuItem;
    private javax.swing.JMenuItem generarSalidaMenuItem;
    private javax.swing.JMenu herramientasMenu;
    private javax.swing.JInternalFrame horaEnPantalla;
    private javax.swing.JMenuItem imprimirMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTable jTableEnPeligro1;
    private javax.swing.JTable jTableLibres;
    private javax.swing.JTable jTablerecurrentes;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblHora;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JPanel panelHora;
    private javax.swing.JMenuItem preceptorMenuItem;
    private javax.swing.JMenuItem responsableMenuItem;
    private javax.swing.JMenuItem salirMenuItem;
    // End of variables declaration//GEN-END:variables

} 
